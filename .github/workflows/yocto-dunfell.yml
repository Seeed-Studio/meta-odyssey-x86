name: Seeed Odyssey x86 Mender.io Yocto Image(dunfell)

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai


# Action will return to the startup working directory every run
jobs:
  build_core_image_minimal:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Initialization environment
        run: |
          sudo apt-get remove aria2 ansible shellcheck rpm xorriso zsync \
          clang-6.0 lldb-6.0 lld-6.0 clang-format-6.0 clang-8 lldb-8 lld-8 clang-format-8 \
          clang-9 lldb-9 lld-9 clangd-9 clang-format-9 \
          esl-erlang gfortran-8 gfortran-9 \
          cabal-install-2.0 cabal-install-2.2 \
          cabal-install-2.4 cabal-install-3.0 cabal-install-3.2 heroku imagemagick \
          libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
          mercurial apt-transport-https mono-complete mysql-client libmysqlclient-dev \
          mysql-server mssql-tools unixodbc-dev yarn bazel chrpath libssl-dev libxft-dev \
          libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
          php-zmq snmp pollinate libpq-dev postgresql-client ruby-full \
          sphinxsearch subversion mongodb-org -yq >/dev/null 2>&1 \
          || echo "failed main apt-get remove"
          echo "Removing large packages"
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get clean
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          #echo "https://github.com/actions/virtual-environments/issues/709"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "remove big /usr/local"
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /usr/local/lib/android >/dev/null 2>&1
          sudo rm -rf /usr/share/dotnet/sdk > /dev/null 2>&1
          sudo rm -rf /usr/share/dotnet/shared > /dev/null 2>&1
          sudo rm -rf /usr/share/swift > /dev/null 2>&1
          sudo -E apt-get -qq update
          sudo -E apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential \
                chrpath socat cpio python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping \
                python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev pylint3 xterm python3-subunit mesa-common-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
        
      
      - name: Check disk usage before build
        run: df -h
        
      - name: Building minimal image
        run: |
            cd ${{ github.workspace }}
            git clone -b dunfell git://git.yoctoproject.org/poky mender-seeed/layers/poky
            git clone git://git.yoctoproject.org/meta-intel mender-seeed/layers/meta-intel 
            git clone  https://github.com/Seeed-Studio/meta-odyssey-x86 mender-seeed/layers/meta-odyssey-x86
            git clone https://github.com/mendersoftware/meta-mender mender-seeed/layers/meta-mender -b dunfell
            git clone https://github.com/openembedded/meta-openembedded  mender-seeed/layers/meta-openembedded -b dunfell


            cd mender-seeed
            source layers/poky/oe-init-build-env

            sudo mkdir -p /mnt/git2
            sudo chmod -R 777  /mnt/git2
            mkdir downloads
            ln -s /mnt/git2/ downloads/git2

            # bitbake-layers add-layer  ../layers/poky/meta
            # bitbake-layers add-layer  ../layers/poky/meta-poky
            # bitbake-layers add-layer  ../layers/poky/meta-yocto-bsp
            bitbake-layers add-layer  ../layers/meta-intel
            bitbake-layers add-layer  ../layers/meta-odyssey-x86
            bitbake-layers add-layer  ../layers/meta-openembedded/meta-oe
            bitbake-layers add-layer  ../layers/meta-openembedded/meta-python
            # bitbake-layers add-layer  ../layers/meta-openembedded/meta-networking
            bitbake-layers add-layer  ../layers/meta-mender/meta-mender-core
            bitbake-layers add-layer  ../layers/meta-mender/meta-mender-demo

            MACHINE="odyssey-x86-mender" bitbake  odyssey-image-base
            df -h

      - name: Check disk usage after build
        run: df -h

      - name: Pack
        run: |
          cd ${{ github.workspace }}/mender-seeed/build/tmp
          tar -Jcf odyssey-x86-mender-yocto-image.tar.xz deploy/images
          echo "PACKAGE=${{ github.workspace }}/mender-seeed/build/tmp/odyssey-x86-mender-yocto-image.tar.xz" >> $GITHUB_ENV

      - name: Upload package
        uses: actions/upload-artifact@master
        with:
          name: yocto deploy
          path: ${{env.PACKAGE}}



